version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: myapp
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./data:/import
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - mongodb_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Data importer service (runs once then exits)
  data-importer:
    image: mongo:7.0
    container_name: data-importer
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./data:/import
    networks:
      - mongodb_network
    command: |
      bash -c "
        echo 'üîÑ Starting data import process...'
        
        # Wait a bit more to ensure MongoDB is fully ready
        sleep 5
        
        # Check if data already exists
        COUNT=$$(mongosh --host mongodb:27017 --quiet --eval 'use restaurant_db; db.restaurants.countDocuments()' 2>/dev/null | tail -n1)
        
        if [ \"$$COUNT\" -gt 0 ] 2>/dev/null; then
          echo '‚úÖ Data already exists ($$COUNT documents). Skipping import.'
        else
          echo 'üì§ Importing restaurant data...'
          mongoimport --host mongodb:27017 --db restaurant_db --collection restaurants --file /import/restaurants.jsonl --drop --verbose
          
          if [ $$? -eq 0 ]; then
            NEW_COUNT=$$(mongosh --host mongodb:27017 --quiet --eval 'use restaurant_db; db.restaurants.countDocuments()' 2>/dev/null | tail -n1)
            echo 'üéâ Import successful! Total documents: $$NEW_COUNT'
          else
            echo '‚ùå Import failed!'
            exit 1
          fi
        fi
        
        echo '‚úÖ Data import process completed!'
      "
    restart: "no"  # Only run once

  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: mypass123
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - mongodb_network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  mongodb_network:
    driver: bridge